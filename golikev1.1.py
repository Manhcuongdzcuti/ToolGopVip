# Obfuscated ctool
# https://facebook.com/manhcuongutvl.dz
# Time : Fri Dec  6 16:22:04 2024
# -------------------------------
_ = lambda __ : __import__('marshal').loads(__import__('base64').b64decode(__[::-1]));exec((_)(b'='))
